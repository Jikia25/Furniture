@use "../abstracts/variables" as *;

@mixin container {
  max-width: 1240px;
  margin-inline: auto;
  width: 90%;
}
@mixin flex {
  display: flex;
}
@mixin flex-dir-clm {
  flex-direction: column;
}
@mixin justify-csb {
  justify-content: space-between;
}
@mixin justify-csa {
  justify-content: space-around;
}
@mixin justify-cc {
  justify-content: center;
}
@mixin justify-se {
  justify-content: space-evenly;
}
@mixin bg-color {
  background-color: #f5f5f5;
}
@mixin bg-yellow {
  background-color: #ffb128;
}
@mixin aline-items-c {
  align-items: center;
}
@mixin aline-items-fa {
  align-items: flex-end;
}
@mixin relative {
  position: relative;
}
@mixin absolute {
  position: absolute;
}
@mixin inline-blk {
  display: inline-block;
}
@mixin display($type: block) {
  display: $type;
}
@mixin position_fixed {
  position: fixed;
}
@mixin text-al-c {
  text-align: center;
}
@mixin alin-self {
  align-self: center;
}
@mixin hidden {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}
@mixin visible {
  visibility: visible;
  opacity: 1;
  pointer-events: all;
}
@mixin hover-move-up($distance: -6px) {
  transition: all 0.3s ease;
  cursor: pointer;

  &:hover {
    transform: translateY($distance);
  }
}

@mixin button-hover {
  transition: all 0.3s ease;
  cursor: pointer;

  &:hover {
    background-color: $colorBlue;
    color: $colorWhite;
    transform: scale(1.03);
    border-radius: 32px;
  }
}
@mixin mode-hover {
  transition: all 0.3s ease;
  cursor: pointer;

  &:hover {
    background-color: $colorBlue;
    color: $colorWhite;
    transform: scale(1.03);
  }
}


@mixin text-hover {
  transition: all 0.2s ease;
  cursor: pointer;

  &:hover {
    background-color: inherit;
    color: $coloryellow;
    transform: scale(1.01);
  }
}



@mixin link-hover {
  transition: all 0.3s ease;
  cursor: pointer;

  &:hover {
    background-color: $colorWhiteBg;
    transform: scale(1.03);
    border-radius: 32px;
  }
}
@mixin show-on-hover($child-selector) {
  &:hover {
    #{$child-selector} {
      @include visible;
    }
  }
}

@mixin background-cover-fixed {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
}

@mixin center-text-and-content {
  text-align: center;
  align-content: center;
}

@mixin media($size) {
  @media (max-width: map-get($breakpoints, $size)) {
    @content;
  }
}